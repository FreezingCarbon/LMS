@using ASP.NET.MVC5.Client.Resources
@model ASP.NET.MVC5.Client.Models.ExternalLoginConfirmationViewModel
@{
    Layout = "~/Views/Account/_LoginLayout.cshtml";
}

<script>

    function associateCrl($scope, $rootScope) {
        $rootScope.title = "@Messages.Associate"
        $scope.Email = "@Html.Raw(Model.Email)";
    }
</script>

<div class="content container" ng-controller="associateCrl">
    <div class="page-wrapper">
        <header class="page-heading clearfix">
            <h1 class="heading-title pull-left">@Messages.Associate</h1>
        </header>
        <div class="page-content">
            <div class="row page-row">
                <div class="col-md-6">
                    <h3 class="title">
                        <a href="javascript:;">Morbi tincidunt posuere turpis eu laoreet</a>
                    </h3>
                    <p class="text-info">
                        You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
                        Please enter a user name for this site below and click the Register button to finish
                        logging in.
                    </p>
                </div>
                <div class="col-md-6">
                    <div class="formy well">
                        <h4 class="title">@string.Format(Messages.AssociateYourAccount, @ViewBag.LoginProvider)</h4>
                        <div class="form">

                            @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", name = "loginform", @novalidate = "" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group has-feedback " ng-class="{'has-error':loginform.Email.$dirty &&(loginform.Email.$error.email||loginform.Email.$error.required),'has-success':loginform.Email.$dirty &&!loginform.Email.$error.email&&!loginform.Email.$error.required}">
                                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                                    <div class="col-md-10">
                                        <input type="email" class="form-control" id="email" required ng-model="Email" name="Email">
                                        <span class="glyphicon glyphicon-envelope form-control-feedback text-muted"></span>
                                        <span class="control-label" ng-show="loginform.Email.$dirty && loginform.Email.$error.required" id="required_email_msg">@Messages.EmailRequired</span>
                                        <span class="control-label" ng-show="loginform.Email.$dirty && loginform.Email.$error.email" id="invalid_email_msg">@Messages.InvalidEmailAddress</span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-3">
                                        <button type="submit" class="btn btn-theme btn-subscribe" ng-class="{disabled:!loginform.$valid}">@Messages.Register</button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

